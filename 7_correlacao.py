# -*- coding: utf-8 -*-
"""7-correlacao.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1UmiXsiKJHgO2S2CBiOXUbzP3Xn7u4932
"""
# O objetivo deste trabalho é exercitar o uso de laços for/while, leitura de CSV, e cálculo de correlação. Os arquivos CSV usados aqui 
# são os mesmos usados no trabalho 4.

# Entrada do programa:

# Uma linha com um número inteiro N;
# N linhas, cada uma com um nome de arquivo CVS;
# Um número variável de linhas representando comandos.
# Saída: o resultado exigido para cada comando dado.

# Todos arquivos CSV das N linhas devem ser abertos. Você pode armazenar cada data frame (retorno da função read_csv) em uma lista. Após essa fase de leitura,
# os comandos irão se referir a cada um desses arquivos.

# Há quatro tipos de comandos. Cada um pode ter um número diferente de linhas, e os padrões da string são os seguintes:

# "correlacaoInter X Y": este comando é composto de duas linhas. A primeira tem a palavra "correlacaoInter" seguida de dois valores inteiros X e Y. A linha seguinte
#     tem o nome de uma coluna Z a ser considerada. Você deve calcular a correlação entre os dados da coluna Z do X-ésimo arquivo com os dados da coluna Z do Y-ésimo
#     arquivo. O resultado deste comando será até duas linhas. A primeira, sempre presente, será a correlação calculada, arredondada para 5 casas decimais. Caso essa
#     correlação seja maior que 0,9 ou menor que -0,9, deve-se escrever uma segunda linha com a frase "Correlacao alta";
# "maiorCorrelacaoPositiva X": este comando sempre tem apenas uma linha. Deve-se analisar o X-ésimo arquivo e testar todas correlações entre pares de colunas 
#     diferentes. A saída do comando deve ser formada de duas linhas. A primeira deve ter a correlação máxima positiva, arredondada para 5 casas decimais. 
#     A segunda deve ter o nome dos campos cuja correlação é máxima, separados por espaço e em ordem alfabética;
# "maiorCorrelacaoNegativa X": este comando sempre tem apenas uma linha. Deve-se analisar o X-ésimo arquivo e testar todas correlações entre pares de colunas 
#     diferentes. A saída do comando deve ser formada de duas linhas. A primeira deve ter a correlação mínima, arredondada para 5 casas decimais. A segunda deve 
#     ter o nome dos campos cuja correlação é mínima, separados por espaço e em ordem alfabética;
# "menorCorrelacao X": este comando sempre tem apenas uma linha. Deve-se analisar o X-ésimo arquivo e testar todas correlações entre pares de colunas diferentes.
#     A saída do comando deve ser formada de duas linhas. A primeira deve ter o valor de correlação mais próximo de zero encontrado, arredondado para 5 casas decimais.
#     A segunda deve ter o nome dos campos que geram esse valor de correlação, separados por espaço e em ordem alfabética.

import pandas as pd

numeroarquivos = int(input())
listaArquivos = []

for i in range(0,numeroarquivos):
 entrada = input()
 arquivo = pd.read_csv(entrada)
 listaArquivos.append(arquivo)

entrada = " "

while entrada != "sair":
  entrada = input()

  if entrada != 'sair':
    listadecomandos = entrada.split(' ')
    comando = listadecomandos[0]
    
    if comando.startswith('correlacaoInter'):
      colunaz = input()
      x = int(listadecomandos[1])
      y = int(listadecomandos[2])

      arquivox = listaArquivos[x-1]
      arquivoy = listaArquivos[y-1]
      relacao = arquivox[colunaz].corr(arquivoy[colunaz])
      print('%.5f'% relacao)

      if relacao > 0.9 or relacao < -0.9:
        print('Correlacao alta')

        
    elif comando.startswith('menorCorrelacao'):
        x = int(listadecomandos[1])
        arquivodacorrelacao = listaArquivos[x-1]
        correl = [arquivodacorrelacao.corr().min()]
        print('%.5f'% correl.sort())
        

    elif comando.startswith('maiorCorrelacaoPositiva'):
        x = int(listadecomandos[1])
        arquivodacorrelacao = listaArquivos[x-1]
        correl = arquivodacorrelacao.corr()
        if correl > 0:
            print(correl.max())
        
    elif comando.startswith('maiorCorrelacaoNegativa'):
        x = int(listadecomandos[1])
        arquivodacorrelacao = listaArquivos[x-1]
        correl = arquivodacorrelacao.corr()
        
        if correl < 0:
            print(correl.max())
        print(correl.min())
